
[?25l1..5
ok 1 admin module init() success call
ok 2 admin module startup() test routerSetting and app.listen
ok 3 admin module startup() test cors and bodyparse
ok 4 admin module startup() test basic auth
on get
Response {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res: 
   IncomingMessage {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: [Object],
        encoding: 'utf8' },
     readable: false,
     domain: null,
     _events: 
      { end: [Object],
        data: [Object],
        error: [Object],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        _bytesDispatched: 181,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        _bytesDispatched: 181,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers: 
      { 'content-type': 'text/plain; charset=utf-8',
        'content-length': '13',
        date: 'Tue, 06 Sep 2016 08:04:28 GMT',
        connection: 'close' },
     rawHeaders: 
      [ 'Content-Type',
        'text/plain; charset=utf-8',
        'Content-Length',
        '13',
        'Date',
        'Tue, 06 Sep 2016 08:04:28 GMT',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        _bytesDispatched: 181,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     _consuming: true,
     _dumped: false,
     req: 
      ClientRequest {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Object],
        connection: [Object],
        _header: 'GET /get HTTP/1.1\r\nHost: localhost:1234\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/2.2.0\r\nAuthorization: Basic dXNyOnBhc3N3ZA==\r\nAccept: */*\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: null,
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/get',
        _ended: true,
        parser: null,
        res: [Circular] },
     text: 'hello, world!',
     read: [Function],
     body: undefined },
  request: 
   Request {
     domain: null,
     _events: { end: [Function: bound _clearTimeout] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'GET',
     url: 'http://localhost:1234/get',
     _header: 
      { 'user-agent': 'node-superagent/2.2.0',
        authorization: 'Basic dXNyOnBhc3N3ZA==',
        accept: '*/*' },
     header: 
      { 'User-Agent': 'node-superagent/2.2.0',
        Authorization: 'Basic dXNyOnBhc3N3ZA==',
        Accept: '*/*' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     req: 
      ClientRequest {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Object],
        connection: [Object],
        _header: 'GET /get HTTP/1.1\r\nHost: localhost:1234\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/2.2.0\r\nAuthorization: Basic dXNyOnBhc3N3ZA==\r\nAccept: */*\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: null,
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/get',
        _ended: true,
        parser: null,
        res: [Object] },
     protocol: 'http:',
     host: 'localhost:1234',
     _callback: [Function],
     res: 
      IncomingMessage {
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Object],
        text: 'hello, world!',
        read: [Function],
        body: undefined },
     _timeout: 0,
     response: [Circular],
     called: true },
  req: 
   ClientRequest {
     domain: null,
     _events: 
      { drain: [Function],
        error: [Function],
        response: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 4,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedHeader: {},
     _contentLength: 0,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        _bytesDispatched: 181,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        _bytesDispatched: 181,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     _header: 'GET /get HTTP/1.1\r\nHost: localhost:1234\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/2.2.0\r\nAuthorization: Basic dXNyOnBhc3N3ZA==\r\nAccept: */*\r\nConnection: close\r\n\r\n',
     _headers: 
      { host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate',
        'user-agent': 'node-superagent/2.2.0',
        authorization: 'Basic dXNyOnBhc3N3ZA==',
        accept: '*/*' },
     _headerNames: 
      { host: 'Host',
        'accept-encoding': 'Accept-Encoding',
        'user-agent': 'User-Agent',
        authorization: 'Authorization',
        accept: 'Accept' },
     _onPendingData: null,
     agent: 
      Agent {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'GET',
     path: '/get',
     _ended: true,
     parser: null,
     res: 
      IncomingMessage {
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Circular],
        text: 'hello, world!',
        read: [Function],
        body: undefined } },
  links: {},
  text: 'hello, world!',
  body: {},
  files: undefined,
  buffered: true,
  headers: 
   { 'content-type': 'text/plain; charset=utf-8',
     'content-length': '13',
     date: 'Tue, 06 Sep 2016 08:04:28 GMT',
     connection: 'close' },
  header: 
   { 'content-type': 'text/plain; charset=utf-8',
     'content-length': '13',
     date: 'Tue, 06 Sep 2016 08:04:28 GMT',
     connection: 'close' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  charset: 'utf-8',
  type: 'text/plain',
  setEncoding: [Function: bound ],
  redirects: [] }
404-------------->
eroro---->: { Error: Not Found
    at Request.callback (/Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/index.js:598:17)
    at /Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/index.js:767:18
    at IncomingMessage.<anonymous> (/Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/parsers/json.js:16:7)
    at emitNone (events.js:91:20)
    at IncomingMessage.emit (events.js:185:7)
    at endReadableNT (_stream_readable.js:934:12)
    at _combinedTickCallback (internal/process/next_tick.js:74:11)
    at process._tickCallback (internal/process/next_tick.js:98:9)
  original: null,
  response: 
   Response {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     res: 
      IncomingMessage {
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        upgrade: false,
        url: '',
        method: null,
        statusCode: 404,
        statusMessage: 'Not Found',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Object],
        text: '{"error":"请求的资源不存在。"}',
        read: [Function],
        body: [Object] },
     request: 
      Request {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        _agent: false,
        _formData: null,
        method: 'GET',
        url: 'http://localhost:1234/user',
        _header: [Object],
        header: [Object],
        writable: true,
        _redirects: 0,
        _maxRedirects: 5,
        cookies: '',
        qs: {},
        qsRaw: [],
        _redirectList: [],
        _streamRequest: false,
        req: [Object],
        protocol: 'http:',
        host: 'localhost:1234',
        _callback: [Function],
        res: [Object],
        _timeout: 0,
        response: [Circular],
        called: true },
     req: 
      ClientRequest {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Object],
        connection: [Object],
        _header: 'GET /user HTTP/1.1\r\nHost: localhost:1234\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/2.2.0\r\nAuthorization: Basic dXNyOnBhc3N3ZA==\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: null,
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/user',
        _ended: true,
        parser: null,
        res: [Object] },
     links: {},
     text: '{"error":"请求的资源不存在。"}',
     body: { error: '请求的资源不存在。' },
     files: undefined,
     buffered: true,
     headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': '39',
        date: 'Tue, 06 Sep 2016 08:04:28 GMT',
        connection: 'close' },
     header: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': '39',
        date: 'Tue, 06 Sep 2016 08:04:28 GMT',
        connection: 'close' },
     statusCode: 404,
     status: 404,
     statusType: 4,
     info: false,
     ok: false,
     redirect: false,
     clientError: true,
     serverError: false,
     error: 
      { Error: cannot GET /user (404)
          at Response.toError (/Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/response.js:106:13)
          at Response._setStatusProperties (/Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/response.js:183:12)
          at new Response (/Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/response.js:42:8)
          at Request._emitResponse (/Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/index.js:631:20)
          at /Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/index.js:767:38
          at IncomingMessage.<anonymous> (/Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/parsers/json.js:16:7)
          at emitNone (events.js:91:20)
          at IncomingMessage.emit (events.js:185:7)
          at endReadableNT (_stream_readable.js:934:12)
          at _combinedTickCallback (internal/process/next_tick.js:74:11)
          at process._tickCallback (internal/process/next_tick.js:98:9)
        status: 404,
        text: '{"error":"请求的资源不存在。"}',
        method: 'GET',
        path: '/user' },
     accepted: false,
     noContent: false,
     badRequest: false,
     unauthorized: false,
     notAcceptable: false,
     forbidden: false,
     notFound: true,
     charset: 'utf-8',
     type: 'application/json',
     setEncoding: [Function: bound ],
     redirects: [] },
  status: 404 }
response---->: Response {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res: 
   IncomingMessage {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: [Object],
        encoding: 'utf8' },
     readable: false,
     domain: null,
     _events: 
      { end: [Object],
        data: [Object],
        error: [Object],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        _bytesDispatched: 169,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        _bytesDispatched: 169,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': '39',
        date: 'Tue, 06 Sep 2016 08:04:28 GMT',
        connection: 'close' },
     rawHeaders: 
      [ 'Content-Type',
        'application/json; charset=utf-8',
        'Content-Length',
        '39',
        'Date',
        'Tue, 06 Sep 2016 08:04:28 GMT',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     upgrade: false,
     url: '',
     method: null,
     statusCode: 404,
     statusMessage: 'Not Found',
     client: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        _bytesDispatched: 169,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     _consuming: true,
     _dumped: false,
     req: 
      ClientRequest {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Object],
        connection: [Object],
        _header: 'GET /user HTTP/1.1\r\nHost: localhost:1234\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/2.2.0\r\nAuthorization: Basic dXNyOnBhc3N3ZA==\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: null,
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/user',
        _ended: true,
        parser: null,
        res: [Circular] },
     text: '{"error":"请求的资源不存在。"}',
     read: [Function],
     body: { error: '请求的资源不存在。' } },
  request: 
   Request {
     domain: null,
     _events: { end: [Function: bound _clearTimeout] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'GET',
     url: 'http://localhost:1234/user',
     _header: 
      { 'user-agent': 'node-superagent/2.2.0',
        authorization: 'Basic dXNyOnBhc3N3ZA==' },
     header: 
      { 'User-Agent': 'node-superagent/2.2.0',
        Authorization: 'Basic dXNyOnBhc3N3ZA==' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     req: 
      ClientRequest {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Object],
        connection: [Object],
        _header: 'GET /user HTTP/1.1\r\nHost: localhost:1234\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/2.2.0\r\nAuthorization: Basic dXNyOnBhc3N3ZA==\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: null,
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/user',
        _ended: true,
        parser: null,
        res: [Object] },
     protocol: 'http:',
     host: 'localhost:1234',
     _callback: [Function],
     res: 
      IncomingMessage {
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        upgrade: false,
        url: '',
        method: null,
        statusCode: 404,
        statusMessage: 'Not Found',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Object],
        text: '{"error":"请求的资源不存在。"}',
        read: [Function],
        body: [Object] },
     _timeout: 0,
     response: [Circular],
     called: true },
  req: 
   ClientRequest {
     domain: null,
     _events: 
      { drain: [Function],
        error: [Function],
        response: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 4,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedHeader: {},
     _contentLength: 0,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        _bytesDispatched: 169,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        _bytesDispatched: 169,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     _header: 'GET /user HTTP/1.1\r\nHost: localhost:1234\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/2.2.0\r\nAuthorization: Basic dXNyOnBhc3N3ZA==\r\nConnection: close\r\n\r\n',
     _headers: 
      { host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate',
        'user-agent': 'node-superagent/2.2.0',
        authorization: 'Basic dXNyOnBhc3N3ZA==' },
     _headerNames: 
      { host: 'Host',
        'accept-encoding': 'Accept-Encoding',
        'user-agent': 'User-Agent',
        authorization: 'Authorization' },
     _onPendingData: null,
     agent: 
      Agent {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'GET',
     path: '/user',
     _ended: true,
     parser: null,
     res: 
      IncomingMessage {
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        upgrade: false,
        url: '',
        method: null,
        statusCode: 404,
        statusMessage: 'Not Found',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Circular],
        text: '{"error":"请求的资源不存在。"}',
        read: [Function],
        body: [Object] } },
  links: {},
  text: '{"error":"请求的资源不存在。"}',
  body: { error: '请求的资源不存在。' },
  files: undefined,
  buffered: true,
  headers: 
   { 'content-type': 'application/json; charset=utf-8',
     'content-length': '39',
     date: 'Tue, 06 Sep 2016 08:04:28 GMT',
     connection: 'close' },
  header: 
   { 'content-type': 'application/json; charset=utf-8',
     'content-length': '39',
     date: 'Tue, 06 Sep 2016 08:04:28 GMT',
     connection: 'close' },
  statusCode: 404,
  status: 404,
  statusType: 4,
  info: false,
  ok: false,
  redirect: false,
  clientError: true,
  serverError: false,
  error: 
   { Error: cannot GET /user (404)
       at Response.toError (/Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/response.js:106:13)
       at Response._setStatusProperties (/Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/response.js:183:12)
       at new Response (/Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/response.js:42:8)
       at Request._emitResponse (/Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/index.js:631:20)
       at /Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/index.js:767:38
       at IncomingMessage.<anonymous> (/Users/QuSheng/workspace/HengHa/node_modules/superagent/lib/node/parsers/json.js:16:7)
       at emitNone (events.js:91:20)
       at IncomingMessage.emit (events.js:185:7)
       at endReadableNT (_stream_readable.js:934:12)
       at _combinedTickCallback (internal/process/next_tick.js:74:11)
       at process._tickCallback (internal/process/next_tick.js:98:9)
     status: 404,
     text: '{"error":"请求的资源不存在。"}',
     method: 'GET',
     path: '/user' },
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: true,
  charset: 'utf-8',
  type: 'application/json',
  setEncoding: [Function: bound ],
  redirects: [] }
ok 5 admin module startup() test main
# tests 5
# pass 5
# fail 0
[?25h


[?25l/Users/QuSheng/workspace/HengHa/test/test-admin.js:190
            assert.isNull(error, 'test main on 200 / assert status);
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: Unexpected token ILLEGAL
    at Object.exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:513:28)
    at Object.Module._extensions..js (module.js:550:10)
    at Module.load (module.js:458:32)
    at tryModuleLoad (module.js:417:12)
    at Function.Module._load (module.js:409:3)
    at Module.require (module.js:468:17)
    at require (internal/module.js:20:19)
    at /Users/QuSheng/workspace/HengHa/node_modules/mocha/lib/mocha.js:220:27
    at Array.forEach (native)
    at Mocha.loadFiles (/Users/QuSheng/workspace/HengHa/node_modules/mocha/lib/mocha.js:217:14)
    at Mocha.run (/Users/QuSheng/workspace/HengHa/node_modules/mocha/lib/mocha.js:485:10)
    at loadAndRun (/Users/QuSheng/workspace/HengHa/node_modules/mocha/bin/_mocha:359:22)
    at Object.<anonymous> (/Users/QuSheng/workspace/HengHa/node_modules/mocha/bin/_mocha:376:3)
    at Module._compile (module.js:541:32)
    at Object.Module._extensions..js (module.js:550:10)
    at Module.load (module.js:458:32)
    at tryModuleLoad (module.js:417:12)
    at Function.Module._load (module.js:409:3)
    at Module.runMain (module.js:575:10)
    at run (node.js:348:7)
    at startup (node.js:140:9)
    at node.js:463:3
[?25h

